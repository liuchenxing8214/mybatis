<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.IUserDao">


    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.itheima.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="user_name"></result>
        <result property="userAddress" column="user_address"></result>
        <result property="userSex" column="user_sex"></result>
        <result property="userBirthday" column="user_birthday"></result>
    </resultMap>
    <!-- 查询所有 -->
    <select id="findAll" resultMap="userMap">
        <!--select id as userId,username as userName,address as userAddress,sex as userSex,birthday as userBirthday from user;-->
        select u.*,a.id as aid ,a.uid,a.money from user u left outer join account
        a on u.id =a.uid
    </select>

    <!-- 根据id查询用户 -->
    <select id="findById" parameterType="INT" resultMap="userMap">
        <include refid="defaultSql"></include>
        where id = #{uid}
    </select>

    <insert id="saveUser" parameterType="com.itheima.domain.User">
        <selectKey keyColumn="id" keyProperty="userId" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)
        values(#{userName},#{userAddress},#{userSex},#{userBirthday})
    </insert>


    <insert id="batchInsert" parameterType="com.itheima.domain.User">
        insert into user (user_name,user_address,user_sex,user_birthday) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userName},#{item.userAddress},#{item.userSex},#{item.userBirthday})
        </foreach>
        ON DUPLICATE KEY UPDATE
        user_sex=VALUES(user_sex),
        user_birthday=VALUES(user_birthday)
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="com.itheima.domain.User">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{userId}
    </update>


    <select id="findByUser" resultMap="userMap" parameterType="com.itheima.domain.User">
        <include refid="defaultSql"></include>
        <where>
            <if test="userName!=null and userName != '' ">
                and user_name like #{userName}
            </if>
            <if test="userAddress != null and userAddress !='' ">
                and user_address like #{userAddress}
            </if>
            <if test="userSex != null and userSex != '' ">
                and user_sex = #{userSex}
            </if>
        </where>
    </select>


    <!-- 查询所有用户在 id 的集合之中 -->
    <select id="findInIds" resultMap="userMap" parameterType="com.itheima.domain.QueryVo">
        <!-- select * from user where id in (1,2,3,4,5); -->
        <include refid="defaultSql"></include>
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="id in ( " close=")" item="uid"
                         separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>


    <!-- 抽取重复的语句代码片段 -->
    <sql id="defaultSql">
          select id,user_name,user_birthday,user_address from user
    </sql>


    <select id="betweenBy" resultMap="userMap">
        <include refid="defaultSql"></include>
        where id >= #{minId} and id &lt;= #{maxId}
    </select>


    <select id="queryCount" resultType="java.lang.Long">
SELECT COUNT(1) from user where user_name = 'modify User property';
    </select>


    <select id="twoFindInIds" resultMap="userMap">
        <include refid="defaultSql"></include>
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


</mapper>